openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /inventory_items/:
    get:
      operationId: inventory_items_list
      tags:
      - inventory_items
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
          description: ''
    post:
      operationId: inventory_items_create
      tags:
      - inventory_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
  /inventory_items/{id}/:
    get:
      operationId: inventory_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory items.
        required: true
      tags:
      - inventory_items
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    put:
      operationId: inventory_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory items.
        required: true
      tags:
      - inventory_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    delete:
      operationId: inventory_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory items.
        required: true
      tags:
      - inventory_items
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /refresh/:
    post:
      operationId: refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /suppliers/:
    get:
      operationId: suppliers_list
      tags:
      - suppliers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Suppliers'
          description: ''
    post:
      operationId: suppliers_create
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Suppliers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Suppliers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Suppliers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suppliers'
          description: ''
  /suppliers/{id}/:
    put:
      operationId: suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this suppliers.
        required: true
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Suppliers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Suppliers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Suppliers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suppliers'
          description: ''
    delete:
      operationId: suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this suppliers.
        required: true
      tags:
      - suppliers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
          maxLength: 500
        item_description:
          type: string
        price:
          type: number
          format: double
        date_added:
          type: string
          format: date
        suppliers:
          type: array
          items:
            type: integer
      required:
      - date_added
      - id
      - item_description
      - item_name
      - price
      - suppliers
    Suppliers:
      type: object
      properties:
        name:
          type: string
          maxLength: 1000
        address:
          type: string
        phone_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        supplies:
          type: array
          items:
            type: integer
      required:
      - address
      - name
      - phone_number
      - supplies
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - email
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
